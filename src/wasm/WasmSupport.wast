(module
  (type $0 (func (param i32) (result i32)))
  (type $1 (func (param i32) (result i32)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param i32) (result i32)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i32) (result i32)))
  (type $6 (func (param i64) (result i64)))
  (type $7 (func (param i64) (result i32 i32)))
  (type $8 (func (param i32 i32 i32) (result i32)))
  (import "Karamel" "mem" (memory $0 16))
  (import "WasmSupport" "WasmSupport_malloc" (func $0 (type 0)))
  (import "WasmSupport" "WasmSupport_trap" (func $1 (type 1)))
  (import "Karamel" "data_start" (global $0 i32))
  (global $1 i32 (i32.const 122))
  (func $2
    (type 2)
    (local i64 i64 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (i32.const 7)
    (i32.and)
    (i32.const 0)
    (i32.eq)
    (i32.const 0)
    (i32.eq)
    (if
      (result i32)
      (then (local.get 0) (i32.const -8) (i32.and) (i32.const 8) (i32.add))
      (else (local.get 0))
    )
    (local.set 6)
    (local.get 6)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $3
    (type 3)
    (local i64 i64 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (i32.const 0)
    (i32.eq)
    (if
      (result i32)
      (then (global.get 0) (i32.const 0) (i32.add) (call 1))
      (else (i32.const -559_038_737))
    )
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $4
    (type 4)
    (local i64 i64 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (i32.const 8)
    (i32.shr_u)
    (i32.const 65_535)
    (i32.and)
    (i32.const 255)
    (i32.and)
    (i32.const 65_535)
    (i32.and)
    (local.get 0)
    (i32.const 8)
    (i32.shl)
    (i32.const 65_535)
    (i32.and)
    (i32.const 65_280)
    (i32.and)
    (i32.const 65_535)
    (i32.and)
    (i32.or)
    (i32.const 65_535)
    (i32.and)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $5
    (type 5)
    (local i64 i64 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (i32.const 24)
    (i32.shr_u)
    (i32.const 255)
    (i32.and)
    (local.get 0)
    (i32.const 8)
    (i32.shr_u)
    (i32.const 65_280)
    (i32.and)
    (i32.or)
    (local.get 0)
    (i32.const 8)
    (i32.shl)
    (i32.const 16_711_680)
    (i32.and)
    (i32.or)
    (local.get 0)
    (i32.const 24)
    (i32.shl)
    (i32.const -16_777_216)
    (i32.and)
    (i32.or)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $6
    (type 6)
    (local i64 i64 i32 i32 i32 i64 i32 i64)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (i32.wrap_i64)
    (i32.const 24)
    (i32.shr_u)
    (i32.const 255)
    (i32.and)
    (local.get 0)
    (i32.wrap_i64)
    (i32.const 8)
    (i32.shr_u)
    (i32.const 65_280)
    (i32.and)
    (i32.or)
    (local.get 0)
    (i32.wrap_i64)
    (i32.const 8)
    (i32.shl)
    (i32.const 16_711_680)
    (i32.and)
    (i32.or)
    (local.get 0)
    (i32.wrap_i64)
    (i32.const 24)
    (i32.shl)
    (i32.const -16_777_216)
    (i32.and)
    (i32.or)
    (i64.extend_i32_u)
    (local.set 6)
    (local.get 0)
    (i32.const 32)
    (i64.extend_i32_u)
    (i64.shr_u)
    (i32.wrap_i64)
    (local.set 7)
    (local.get 7)
    (i32.const 24)
    (i32.shr_u)
    (i32.const 255)
    (i32.and)
    (local.get 7)
    (i32.const 8)
    (i32.shr_u)
    (i32.const 65_280)
    (i32.and)
    (i32.or)
    (local.get 7)
    (i32.const 8)
    (i32.shl)
    (i32.const 16_711_680)
    (i32.and)
    (i32.or)
    (local.get 7)
    (i32.const 24)
    (i32.shl)
    (i32.const -16_777_216)
    (i32.and)
    (i32.or)
    (i64.extend_i32_u)
    (local.set 8)
    (local.get 6)
    (i32.const 32)
    (i64.extend_i32_u)
    (i64.shl)
    (local.get 8)
    (i64.or)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $7
    (type 7)
    (local i64 i64 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (call 6)
    (local.set 1)
    (local.get 1)
    (i32.wrap_i64)
    (local.get 1)
    (i64.const 32)
    (i64.shr_u)
    (i32.wrap_i64)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $8
    (type 8)
    (local i64 i64 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 7)
    (local.get 1)
    (i32.const -1)
    (local.get 2)
    (i32.div_u)
    (i32.ge_u)
    (if
      (result i32)
      (then (global.get 0) (i32.const 81) (i32.add) (call 1))
      (else (i32.const -559_038_737))
    )
    (drop)
    (local.get 1)
    (local.get 2)
    (i32.mul)
    (local.set 8)
    (i32.const 0)
    (local.set 9)
    (loop
      (local.get 9)
      (local.get 8)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 0)
          (local.get 9)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i32.const 0)
          (i32.store8)
          (local.get 9)
          (i32.const 1)
          (i32.add)
          (local.set 9)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (local.get 7)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (export "WasmSupport_align_64" (func 2))
  (export "WasmSupport_check_buffer_size" (func 3))
  (export "WasmSupport_betole16" (func 4))
  (export "WasmSupport_betole32" (func 5))
  (export "WasmSupport_betole64" (func 6))
  (export "WasmSupport_betole64_packed" (func 7))
  (export "WasmSupport_memzero" (func 8))
  (export "data_size" (global 1))
  (data $0
    (global.get 0)
    "\5a\65\72\6f\2d\73\69\7a\65\64\20\61\72\72\61\79"
    "\73\20\61\72\65\20\6e\6f\74\20\73\75\70\70\6f\72"
    "\74\65\64\20\69\6e\20\43\20\61\6e\64\20\69\6e\20"
    "\57\41\53\4d\20\65\69\74\68\65\72\2e\20\53\65\65"
    "\20\57\61\73\6d\53\75\70\70\6f\72\74\2e\66\73\74"
    "\00\4f\76\65\72\66\6c\6f\77\20\69\6e\20\6d\65\6d"
    "\7a\65\72\6f\3b\20\73\65\65\20\57\61\73\6d\53\75"
    "\70\70\6f\72\74\2e\66\73\74\00"
  )
)
