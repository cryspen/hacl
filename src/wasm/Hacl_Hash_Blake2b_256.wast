(module
  (type $0 (func (param i64) (result i64)))
  (type $1 (func (param i64) (result i32 i32)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param i32) (result i32)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i32) (result i32)))
  (type $6 (func (param i32) (result i32)))
  (type $7 (func (param i32) (result i32)))
  (type $8 (func (param i32 i32 i32) (result i32)))
  (type $9 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $10 (func (param i32 i32 i32) (result i32)))
  (type $11 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $12 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $13 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $14 (func (param i32 i32 i32 i32 i32) (result i32)))
  (type $15 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $16 (func (param i32 i32 i32) (result i32)))
  (type $17 (func (param i32 i32 i32 i32 i32 i32) (result i32)))
  (type $18 (func (param i32 i32) (result i32)))
  (type $19 (func (param i32 i32) (result i32)))
  (type $20 (func (param i32) (result i32)))
  (import "Karamel" "mem" (memory $0 16))
  (import "WasmSupport" "WasmSupport_betole64" (func $0 (type 0)))
  (import "WasmSupport" "WasmSupport_betole64_packed" (func $1 (type 1)))
  (import "WasmSupport" "WasmSupport_align_64" (func $2 (type 2)))
  (import "WasmSupport" "WasmSupport_malloc" (func $3 (type 3)))
  (import "WasmSupport" "WasmSupport_betole32" (func $4 (type 4)))
  (import "WasmSupport" "WasmSupport_trap" (func $5 (type 5)))
  (import "WasmSupport" "WasmSupport_betole16" (func $6 (type 6)))
  (import "WasmSupport" "WasmSupport_check_buffer_size" (func $7 (type 7)))
  (import "WasmSupport" "WasmSupport_memzero" (func $8 (type 8)))
  (import "Karamel" "data_start" (global $0 i32))
  (global $1 i32 (i32.const 1_058))
  (func $9
    (type 9)
    (local i64 i64 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 9)
    (i32.const 16)
    (local.set 10)
    (local.get 10)
    (call 7)
    (drop)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 16)
    (i32.const 1)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 7)
    (local.set 8)
    (local.get 7)
    (local.get 8)
    (i32.store align=1)
    (local.set 11)
    (local.get 11)
    (i64.const 0)
    (i64.store align=1)
    (local.get 10)
    (i32.const 1)
    (i32.sub)
    (local.set 10)
    (loop
      (local.get 10)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 11)
          (local.get 10)
          (i32.const 8)
          (i32.mul)
          (i32.add)
          (local.get 11)
          (i64.load align=1)
          (i64.store align=1)
          (local.get 10)
          (i32.const 1)
          (i32.sub)
          (local.set 10)
          (i32.const 0)
          (local.set 7)
          (local.set 8)
          (local.get 7)
          (local.get 8)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 11)
    (local.set 12)
    (global.get 0)
    (i32.const 0)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 9)
    (i32.const 0)
    (local.set 7)
    (local.set 8)
    (local.get 7)
    (local.get 8)
    (i32.store align=1)
  )
  (func $10
    (type 10)
    (local i64 i64 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 7)
    (local.get 0)
    (local.set 8)
    (global.get 0)
    (i32.const 154)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 7)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (func $11
    (type 11)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 9)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 7)
    (local.set 8)
    (local.get 7)
    (local.get 8)
    (i32.store align=1)
    (local.set 10)
    (local.get 10)
    (i32.const 128)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 10)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 10)
    (local.set 11)
    (i32.const 128)
    (local.set 12)
    (local.get 12)
    (call 7)
    (drop)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 128)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 7)
    (local.set 8)
    (local.get 7)
    (local.get 8)
    (i32.store align=1)
    (local.set 13)
    (local.get 13)
    (i32.const 0)
    (i32.store8)
    (local.get 12)
    (i32.const 1)
    (i32.sub)
    (local.set 12)
    (loop
      (local.get 12)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 13)
          (local.get 12)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 13)
          (i32.load8_u)
          (i32.store8)
          (local.get 12)
          (i32.const 1)
          (i32.sub)
          (local.set 12)
          (i32.const 0)
          (local.set 7)
          (local.set 8)
          (local.get 7)
          (local.get 8)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 13)
    (local.set 14)
    (local.get 3)
    (local.set 15)
    (local.get 14)
    (local.set 16)
    (local.get 2)
    (local.set 17)
    (loop
      (local.get 17)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 16)
          (local.get 17)
          (i32.const 1)
          (i32.sub)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 15)
          (local.get 17)
          (i32.const 1)
          (i32.sub)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i32.load8_u)
          (i32.store8)
          (local.get 17)
          (i32.const 1)
          (i32.sub)
          (local.set 17)
          (i32.const 0)
          (local.set 7)
          (local.set 8)
          (local.get 7)
          (local.get 8)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 4)
    (i32.const 0)
    (i32.eq)
    (if
      (result i32)
      (then
        (local.get 0)
        (local.get 1)
        (i32.const 1)
        (local.get 11)
        (local.get 14)
        (call 9)
      )
      (else
        (local.get 0)
        (local.get 1)
        (i32.const 0)
        (local.get 11)
        (local.get 14)
        (call 9)
      )
    )
    (drop)
    (local.get 14)
    (i32.const 128)
    (i32.const 4)
    (call 8)
    (local.get 9)
    (i32.const 0)
    (local.set 7)
    (local.set 8)
    (local.get 7)
    (local.get 8)
    (i32.store align=1)
  )
  (func $12
    (type 12)
    (local i64 i64 i32 i32 i32 i32 i64 i32 i32 i64 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 10)
    (i32.const 0)
    (local.set 11)
    (loop
      (local.get 11)
      (local.get 5)
      (i32.lt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 11)
          (i32.const 1)
          (i32.add)
          (i32.const 128)
          (i32.mul)
          (i64.extend_i32_u)
          (local.set 12)
          (i32.const 0)
          (i32.load align=1)
          (i32.const 1)
          (i32.const 2)
          (i32.mul)
          (i32.const 8)
          (i32.mul)
          (i32.const 0)
          (i32.load align=1)
          (i32.add)
          (call 2)
          (i32.const 0)
          (local.set 8)
          (local.set 9)
          (local.get 8)
          (local.get 9)
          (i32.store align=1)
          (local.set 13)
          (local.get 13)
          (local.get 12)
          (i64.store align=1)
          (local.get 13)
          (i64.const 0)
          (i64.store offset=8 align=1)
          (local.get 13)
          (local.set 14)
          (local.get 3)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (local.get 14)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (i64.add)
          (local.set 15)
          (i32.const 0)
          (i32.load align=1)
          (i32.const 1)
          (i32.const 2)
          (i32.mul)
          (i32.const 8)
          (i32.mul)
          (i32.const 0)
          (i32.load align=1)
          (i32.add)
          (call 2)
          (i32.const 0)
          (local.set 8)
          (local.set 9)
          (local.get 8)
          (local.get 9)
          (i32.store align=1)
          (local.set 16)
          (local.get 16)
          (local.get 3)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (local.get 14)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (i64.add)
          (i64.store align=1)
          (local.get 16)
          (local.get 3)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load offset=8 align=1)
          (local.get 14)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load offset=8 align=1)
          (i64.add)
          (local.get 15)
          (local.get 15)
          (local.get 14)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (i64.xor)
          (local.get 15)
          (local.get 14)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (i64.sub)
          (local.get 14)
          (i32.const 0)
          (i32.const 16)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i64.load align=1)
          (i64.xor)
          (i64.or)
          (i64.xor)
          (i32.const 63)
          (i64.extend_i32_u)
          (i64.shr_u)
          (i64.add)
          (i64.store offset=8 align=1)
          (local.get 16)
          (local.set 17)
          (local.get 4)
          (local.get 11)
          (i32.const 128)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.set 18)
          (local.get 1)
          (local.get 2)
          (i32.const 0)
          (local.get 17)
          (local.get 18)
          (call 9)
          (drop)
          (local.get 11)
          (i32.const 1)
          (i32.add)
          (local.set 11)
          (i32.const 0)
          (local.set 8)
          (local.set 9)
          (local.get 8)
          (local.get 9)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (local.get 10)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
  )
  (func $13
    (type 13)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (local.set 10)
    (i32.const 128)
    (local.set 11)
    (local.get 11)
    (call 7)
    (drop)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 128)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 12)
    (local.get 12)
    (i32.const 0)
    (i32.store8)
    (local.get 11)
    (i32.const 1)
    (i32.sub)
    (local.set 11)
    (loop
      (local.get 11)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 12)
          (local.get 11)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 12)
          (i32.load8_u)
          (i32.store8)
          (local.get 11)
          (i32.const 1)
          (i32.sub)
          (local.set 11)
          (i32.const 0)
          (local.set 8)
          (local.set 9)
          (local.get 8)
          (local.get 9)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 12)
    (local.set 13)
    (local.get 5)
    (local.get 0)
    (local.get 4)
    (i32.sub)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 14)
    (local.get 14)
    (local.set 15)
    (local.get 13)
    (local.set 16)
    (local.get 4)
    (local.set 17)
    (loop
      (local.get 17)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 16)
          (local.get 17)
          (i32.const 1)
          (i32.sub)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 15)
          (local.get 17)
          (i32.const 1)
          (i32.sub)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (i32.load8_u)
          (i32.store8)
          (local.get 17)
          (i32.const 1)
          (i32.sub)
          (local.set 17)
          (i32.const 0)
          (local.set 8)
          (local.set 9)
          (local.get 8)
          (local.get 9)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 18)
    (local.get 18)
    (local.get 0)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 18)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 18)
    (local.set 19)
    (local.get 3)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (local.get 19)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (i64.add)
    (local.set 20)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 21)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 22)
    (local.get 22)
    (local.get 0)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 22)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 22)
    (local.set 23)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 24)
    (local.get 24)
    (local.get 0)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 24)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 24)
    (local.set 25)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 26)
    (local.get 26)
    (local.get 0)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 26)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 26)
    (local.set 27)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 28)
    (local.get 28)
    (local.get 0)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 28)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 28)
    (local.set 29)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 30)
    (local.get 30)
    (local.get 0)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 30)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 30)
    (local.set 31)
    (local.get 21)
    (local.get 3)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (local.get 23)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (i64.add)
    (i64.store align=1)
    (local.get 21)
    (local.get 3)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load offset=8 align=1)
    (local.get 25)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load offset=8 align=1)
    (i64.add)
    (local.get 20)
    (local.get 20)
    (local.get 27)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (i64.xor)
    (local.get 20)
    (local.get 29)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (i64.sub)
    (local.get 31)
    (i32.const 0)
    (i32.const 16)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load align=1)
    (i64.xor)
    (i64.or)
    (i64.xor)
    (i32.const 63)
    (i64.extend_i32_u)
    (i64.shr_u)
    (i64.add)
    (i64.store offset=8 align=1)
    (local.get 21)
    (local.set 32)
    (local.get 1)
    (local.get 2)
    (i32.const 1)
    (local.get 32)
    (local.get 13)
    (call 9)
    (drop)
    (local.get 13)
    (i32.const 128)
    (i32.const 4)
    (call 8)
    (local.get 10)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
  )
  (func $14
    (type 14)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (local.set 9)
    (local.get 0)
    (i32.const 128)
    (i32.div_u)
    (local.set 10)
    (local.get 0)
    (i32.const 128)
    (i32.rem_u)
    (local.set 11)
    (local.get 11)
    (i32.const 0)
    (i32.eq)
    (local.get 10)
    (i32.const 0)
    (i32.gt_u)
    (i32.and)
    (if
      (result i32)
      (then
        (local.get 10)
        (i32.const 1)
        (i32.sub)
        (local.set 12)
        (i32.const 128)
        (local.set 13)
        (i32.const 0)
        (i32.load align=1)
        (i32.const 1)
        (i32.const 1)
        (i32.mul)
        (i32.const 8)
        (i32.mul)
        (i32.const 0)
        (i32.load align=1)
        (i32.add)
        (call 2)
        (i32.const 0)
        (local.set 7)
        (local.set 8)
        (local.get 7)
        (local.get 8)
        (i32.store align=1)
        (local.set 14)
        (local.get 14)
        (local.get 12)
        (i32.store align=1)
        (local.get 14)
        (local.get 13)
        (i32.store offset=4 align=1)
        (i32.const 0)
        (local.set 15)
        (local.get 14)
        (local.set 16)
        (local.get 16)
      )
      (else
        (i32.const 0)
        (i32.load align=1)
        (i32.const 1)
        (i32.const 1)
        (i32.mul)
        (i32.const 8)
        (i32.mul)
        (i32.const 0)
        (i32.load align=1)
        (i32.add)
        (call 2)
        (i32.const 0)
        (local.set 7)
        (local.set 8)
        (local.get 7)
        (local.get 8)
        (i32.store align=1)
        (local.set 17)
        (local.get 17)
        (local.get 10)
        (i32.store align=1)
        (local.get 17)
        (local.get 11)
        (i32.store offset=4 align=1)
        (i32.const 0)
        (local.set 18)
        (local.get 17)
        (local.set 19)
        (local.get 19)
      )
    )
    (local.set 20)
    (local.get 20)
    (i32.const 0)
    (i32.const 8)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (local.set 21)
    (local.get 20)
    (i32.const 0)
    (i32.const 8)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=4 align=1)
    (local.set 22)
    (local.get 0)
    (local.get 1)
    (local.get 2)
    (local.get 3)
    (local.get 4)
    (local.get 21)
    (call 12)
    (drop)
    (local.get 0)
    (local.get 1)
    (local.get 2)
    (local.get 3)
    (local.get 22)
    (local.get 4)
    (call 13)
    (local.get 9)
    (i32.const 0)
    (local.set 7)
    (local.set 8)
    (local.get 7)
    (local.get 8)
    (i32.store align=1)
  )
  (func $15
    (type 15)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 10)
    (i32.const 0)
    (i32.load align=1)
    (i32.const 1)
    (i32.const 2)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
    (local.set 11)
    (local.get 11)
    (i32.const 128)
    (i64.extend_i32_u)
    (i64.store align=1)
    (local.get 11)
    (i64.const 0)
    (i64.store offset=8 align=1)
    (local.get 11)
    (local.set 12)
    (local.get 2)
    (i32.const 0)
    (i32.gt_u)
    (if
      (result i32)
      (then
        (local.get 0)
        (local.get 1)
        (local.get 2)
        (local.get 3)
        (local.get 4)
        (call 11)
        (drop)
        (local.get 4)
        (i32.const 0)
        (i32.eq)
        (i32.const 0)
        (i32.eq)
        (if
          (result i32)
          (then
            (local.get 4)
            (local.get 0)
            (local.get 1)
            (local.get 12)
            (local.get 5)
            (call 14)
          )
          (else (i32.const -559_038_737))
        )
      )
      (else
        (i32.const 0)
        (i32.load align=1)
        (i32.const 1)
        (i32.const 2)
        (i32.mul)
        (i32.const 8)
        (i32.mul)
        (i32.const 0)
        (i32.load align=1)
        (i32.add)
        (call 2)
        (i32.const 0)
        (local.set 8)
        (local.set 9)
        (local.get 8)
        (local.get 9)
        (i32.store align=1)
        (local.set 13)
        (local.get 13)
        (i32.const 0)
        (i64.extend_i32_u)
        (i64.store align=1)
        (local.get 13)
        (i64.const 0)
        (i64.store offset=8 align=1)
        (local.get 13)
        (local.set 14)
        (local.get 4)
        (local.get 0)
        (local.get 1)
        (local.get 14)
        (local.get 5)
        (call 14)
      )
    )
    (local.get 10)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
  )
  (func $16
    (type 16)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 7)
    (i32.const 64)
    (local.set 8)
    (local.get 8)
    (local.set 9)
    (local.get 9)
    (call 7)
    (drop)
    (i32.const 0)
    (i32.load align=1)
    (local.get 8)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.const 0)
    (i32.load align=1)
    (i32.add)
    (call 2)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
    (local.set 10)
    (local.get 10)
    (i32.const 0)
    (i32.store8)
    (local.get 9)
    (i32.const 1)
    (i32.sub)
    (local.set 9)
    (loop
      (local.get 9)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 10)
          (local.get 9)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 10)
          (i32.load8_u)
          (i32.store8)
          (local.get 9)
          (i32.const 1)
          (i32.sub)
          (local.set 9)
          (i32.const 0)
          (local.set 5)
          (local.set 6)
          (local.get 5)
          (local.get 6)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 10)
    (local.set 11)
    (local.get 11)
    (local.set 12)
    (local.get 11)
    (i32.const 32)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (local.set 13)
    (local.get 2)
    (local.set 14)
    (global.get 0)
    (i32.const 300)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 7)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (func $17
    (type 17)
    (local i64 i64 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 10)
    (i32.const 4)
    (local.set 11)
    (global.get 0)
    (i32.const 448)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 10)
    (i32.const 0)
    (local.set 8)
    (local.set 9)
    (local.get 8)
    (local.get 9)
    (i32.store align=1)
  )
  (func $18
    (type 18)
    (local i64 i64 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 6)
    (local.get 0)
    (local.set 7)
    (global.get 0)
    (i32.const 589)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 6)
    (i32.const 0)
    (local.set 4)
    (local.set 5)
    (local.get 4)
    (local.get 5)
    (i32.store align=1)
  )
  (func $19
    (type 19)
    (local i64 i64 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 6)
    (local.get 1)
    (local.set 7)
    (global.get 0)
    (i32.const 750)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 6)
    (i32.const 0)
    (local.set 4)
    (local.set 5)
    (local.get 4)
    (local.get 5)
    (i32.store align=1)
  )
  (func $20
    (type 20)
    (local i64 i64 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (i32.const 4)
    (local.set 6)
    (global.get 0)
    (i32.const 910)
    (i32.add)
    (call 5)
    (unreachable)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (export "Hacl_Blake2b_256_blake2b_init" (func 10))
  (export "Hacl_Blake2b_256_blake2b_update_key" (func 11))
  (export "Hacl_Blake2b_256_blake2b_update_multi" (func 12))
  (export "Hacl_Blake2b_256_blake2b_update_last" (func 13))
  (export "Hacl_Blake2b_256_blake2b_finish" (func 16))
  (export "Hacl_Blake2b_256_blake2b" (func 17))
  (export "Hacl_Blake2b_256_load_state256b_from_state32" (func 18))
  (export "Hacl_Blake2b_256_store_state256b_to_state32" (func 19))
  (export "Hacl_Blake2b_256_blake2b_malloc" (func 20))
  (export "data_size" (global 1))
  (data $0
    (global.get 0)
    "\48\61\63\6c\2e\42\6c\61\6b\65\32\62\5f\32\35\36"
    "\2e\62\6c\61\6b\65\32\62\5f\75\70\64\61\74\65\5f"
    "\62\6c\6f\63\6b\3a\20\63\6f\6d\70\69\6c\61\74\69"
    "\6f\6e\20\65\72\72\6f\72\20\74\75\72\6e\65\64\20"
    "\74\6f\20\72\75\6e\74\69\6d\65\20\66\61\69\6c\75"
    "\72\65\0a\46\61\69\6c\75\72\65\28\22\6d\69\73\73"
    "\69\6e\67\20\74\79\70\65\20\69\6e\20\6c\61\79\6f"
    "\75\74\20\6d\61\70\3a\20\4c\69\62\2e\49\6e\74\56"
    "\65\63\74\6f\72\2e\49\6e\74\72\69\6e\73\69\63\73"
    "\2e\76\65\63\32\35\36\22\29\00\48\61\63\6c\2e\42"
    "\6c\61\6b\65\32\62\5f\32\35\36\2e\62\6c\61\6b\65"
    "\32\62\5f\69\6e\69\74\3a\20\63\6f\6d\70\69\6c\61"
    "\74\69\6f\6e\20\65\72\72\6f\72\20\74\75\72\6e\65"
    "\64\20\74\6f\20\72\75\6e\74\69\6d\65\20\66\61\69"
    "\6c\75\72\65\0a\46\61\69\6c\75\72\65\28\22\6d\69"
    "\73\73\69\6e\67\20\74\79\70\65\20\69\6e\20\6c\61"
    "\79\6f\75\74\20\6d\61\70\3a\20\4c\69\62\2e\49\6e"
    "\74\56\65\63\74\6f\72\2e\49\6e\74\72\69\6e\73\69"
    "\63\73\2e\76\65\63\32\35\36\22\29\00\48\61\63\6c"
    "\2e\42\6c\61\6b\65\32\62\5f\32\35\36\2e\62\6c\61"
    "\6b\65\32\62\5f\66\69\6e\69\73\68\3a\20\63\6f\6d"
    "\70\69\6c\61\74\69\6f\6e\20\65\72\72\6f\72\20\74"
    "\75\72\6e\65\64\20\74\6f\20\72\75\6e\74\69\6d\65"
    "\20\66\61\69\6c\75\72\65\0a\46\61\69\6c\75\72\65"
    "\28\22\6d\69\73\73\69\6e\67\20\74\79\70\65\20\69"
    "\6e\20\6c\61\79\6f\75\74\20\6d\61\70\3a\20\4c\69"
    "\62\2e\49\6e\74\56\65\63\74\6f\72\2e\49\6e\74\72"
    "\69\6e\73\69\63\73\2e\76\65\63\32\35\36\22\29\00"
    "\48\61\63\6c\2e\42\6c\61\6b\65\32\62\5f\32\35\36"
    "\2e\62\6c\61\6b\65\32\62\3a\20\63\6f\6d\70\69\6c"
    "\61\74\69\6f\6e\20\65\72\72\6f\72\20\74\75\72\6e"
    "\65\64\20\74\6f\20\72\75\6e\74\69\6d\65\20\66\61"
    "\69\6c\75\72\65\0a\46\61\69\6c\75\72\65\28\22\6d"
    "\69\73\73\69\6e\67\20\74\79\70\65\20\69\6e\20\6c"
    "\61\79\6f\75\74\20\6d\61\70\3a\20\4c\69\62\2e\49"
    "\6e\74\56\65\63\74\6f\72\2e\49\6e\74\72\69\6e\73"
    "\69\63\73\2e\76\65\63\32\35\36\22\29\00\48\61\63"
    "\6c\2e\42\6c\61\6b\65\32\62\5f\32\35\36\2e\6c\6f"
    "\61\64\5f\73\74\61\74\65\32\35\36\62\5f\66\72\6f"
    "\6d\5f\73\74\61\74\65\33\32\3a\20\63\6f\6d\70\69"
    "\6c\61\74\69\6f\6e\20\65\72\72\6f\72\20\74\75\72"
    "\6e\65\64\20\74\6f\20\72\75\6e\74\69\6d\65\20\66"
    "\61\69\6c\75\72\65\0a\46\61\69\6c\75\72\65\28\22"
    "\6d\69\73\73\69\6e\67\20\74\79\70\65\20\69\6e\20"
    "\6c\61\79\6f\75\74\20\6d\61\70\3a\20\4c\69\62\2e"
    "\49\6e\74\56\65\63\74\6f\72\2e\49\6e\74\72\69\6e"
    "\73\69\63\73\2e\76\65\63\32\35\36\22\29\00\48\61"
    "\63\6c\2e\42\6c\61\6b\65\32\62\5f\32\35\36\2e\73"
    "\74\6f\72\65\5f\73\74\61\74\65\32\35\36\62\5f\74"
    "\6f\5f\73\74\61\74\65\33\32\3a\20\63\6f\6d\70\69"
    "\6c\61\74\69\6f\6e\20\65\72\72\6f\72\20\74\75\72"
    "\6e\65\64\20\74\6f\20\72\75\6e\74\69\6d\65\20\66"
    "\61\69\6c\75\72\65\0a\46\61\69\6c\75\72\65\28\22"
    "\6d\69\73\73\69\6e\67\20\74\79\70\65\20\69\6e\20"
    "\6c\61\79\6f\75\74\20\6d\61\70\3a\20\4c\69\62\2e"
    "\49\6e\74\56\65\63\74\6f\72\2e\49\6e\74\72\69\6e"
    "\73\69\63\73\2e\76\65\63\32\35\36\22\29\00\48\61"
    "\63\6c\2e\42\6c\61\6b\65\32\62\5f\32\35\36\2e\62"
    "\6c\61\6b\65\32\62\5f\6d\61\6c\6c\6f\63\3a\20\63"
    "\6f\6d\70\69\6c\61\74\69\6f\6e\20\65\72\72\6f\72"
    "\20\74\75\72\6e\65\64\20\74\6f\20\72\75\6e\74\69"
    "\6d\65\20\66\61\69\6c\75\72\65\0a\46\61\69\6c\75"
    "\72\65\28\22\6d\69\73\73\69\6e\67\20\74\79\70\65"
    "\20\69\6e\20\6c\61\79\6f\75\74\20\6d\61\70\3a\20"
    "\4c\69\62\2e\49\6e\74\56\65\63\74\6f\72\2e\49\6e"
    "\74\72\69\6e\73\69\63\73\2e\76\65\63\32\35\36\22"
    "\29\00"
  )
)
