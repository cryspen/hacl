(module
  (type $0 (func (param i64) (result i64)))
  (type $1 (func (param i32) (result i32)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param i32 i32 i32) (result i32)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i32) (result i32)))
  (type $6 (func (param i64) (result i32 i32)))
  (type $7 (func (param i32) (result i32)))
  (type $8 (func (param i32) (result i32)))
  (type $9 (func (param i32 i32 i32 i64 i32 i32) (result i32)))
  (type $10 (func (param i32) (result i32)))
  (type $11 (func (param i32) (result i32)))
  (type $12 (func (param i32 i32 i32) (result i32)))
  (type $13 (func (param i32 i32) (result i32)))
  (type $14 (func (param i32) (result i32)))
  (import "Karamel" "mem" (memory $0 16))
  (import "WasmSupport" "WasmSupport_betole64" (func $0 (type 0)))
  (import "WasmSupport" "WasmSupport_betole32" (func $1 (type 1)))
  (import "WasmSupport" "WasmSupport_betole16" (func $2 (type 2)))
  (import "WasmSupport" "WasmSupport_memzero" (func $3 (type 3)))
  (import "WasmSupport" "WasmSupport_align_64" (func $4 (type 4)))
  (import "WasmSupport" "WasmSupport_malloc" (func $5 (type 5)))
  (import "WasmSupport" "WasmSupport_betole64_packed" (func $6 (type 6)))
  (import "WasmSupport" "WasmSupport_trap" (func $7 (type 7)))
  (import "WasmSupport" "WasmSupport_check_buffer_size" (func $8 (type 8)))
  (import
    "Hacl_Hash_Blake2s_128"
    "Hacl_Blake2s_128_blake2s_update_multi"
    (func $9 (type 9))
  )
  (import "Karamel" "data_start" (global $0 i32))
  (global $1 i32 (i32.const 656))
  (func $10
    (type 10)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (i32.const 64)
    (local.set 6)
    (local.get 6)
    (call 8)
    (drop)
    (i32.const 64)
    (i32.const 1)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (call 5)
    (local.set 7)
    (local.get 7)
    (i32.const 0)
    (i32.store8)
    (local.get 6)
    (i32.const 1)
    (i32.sub)
    (local.set 6)
    (loop
      (local.get 6)
      (i32.const 0)
      (i32.gt_u)
      (if
        (then
          (i32.const 0)
          (i32.load align=1)
          (local.get 7)
          (local.get 6)
          (i32.const 1)
          (i32.mul)
          (i32.add)
          (local.get 7)
          (i32.load8_u)
          (i32.store8)
          (local.get 6)
          (i32.const 1)
          (i32.sub)
          (local.set 6)
          (i32.const 0)
          (local.set 3)
          (local.set 4)
          (local.get 3)
          (local.get 4)
          (i32.store align=1)
          (br 1)
        )
        (else (nop))
      )
    )
    (local.get 7)
    (local.set 8)
    (i32.const 4)
    (local.set 9)
    (global.get 0)
    (i32.const 0)
    (i32.add)
    (call 7)
    (unreachable)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $11
    (type 11)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (local.set 6)
    (local.get 6)
    (i32.const 0)
    (i32.const 24)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=8 align=1)
    (local.set 7)
    (local.get 6)
    (i32.const 0)
    (i32.const 3)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.add)
    (i32.const 0)
    (i32.add)
    (local.set 8)
    (local.get 8)
    (i32.const 0)
    (i32.const 8)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=4 align=1)
    (local.set 9)
    (local.get 9)
    (local.set 10)
    (global.get 0)
    (i32.const 172)
    (i32.add)
    (call 7)
    (unreachable)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (func $12
    (type 12)
    (local
      i64
      i64
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i64
      i32
      i64
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
      i32
    )
    (i32.const 0)
    (i32.load align=1)
    (local.set 7)
    (local.get 0)
    (local.set 8)
    (local.get 8)
    (i32.const 0)
    (i32.const 24)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load offset=16 align=1)
    (local.set 9)
    (local.get 2)
    (i64.extend_i32_u)
    (i64.const -1)
    (local.get 9)
    (i64.sub)
    (i64.gt_u)
    (if
      (result i32)
      (then (i32.const 1))
      (else
        (local.get 9)
        (i32.const 64)
        (i64.extend_i32_u)
        (i64.rem_u)
        (i64.const 0)
        (i64.eq)
        (local.get 9)
        (i64.const 0)
        (i64.gt_u)
        (i32.and)
        (if
          (result i32)
          (then (i32.const 64))
          (else
            (local.get 9)
            (i32.const 64)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i32.wrap_i64)
          )
        )
        (local.set 10)
        (local.get 2)
        (i32.const 64)
        (local.get 10)
        (i32.sub)
        (i32.le_u)
        (if
          (result i32)
          (then
            (local.get 0)
            (local.set 11)
            (local.get 11)
            (i32.const 0)
            (i32.const 3)
            (i32.mul)
            (i32.const 8)
            (i32.mul)
            (i32.add)
            (i32.const 0)
            (i32.add)
            (local.set 12)
            (local.get 11)
            (i32.const 0)
            (i32.const 24)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i32.load offset=8 align=1)
            (local.set 13)
            (local.get 11)
            (i32.const 0)
            (i32.const 24)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (i64.load offset=16 align=1)
            (local.set 14)
            (local.get 14)
            (i32.const 64)
            (i64.extend_i32_u)
            (i64.rem_u)
            (i64.const 0)
            (i64.eq)
            (local.get 14)
            (i64.const 0)
            (i64.gt_u)
            (i32.and)
            (if
              (result i32)
              (then (i32.const 64))
              (else
                (local.get 14)
                (i32.const 64)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i32.wrap_i64)
              )
            )
            (local.set 15)
            (local.get 13)
            (local.get 15)
            (i32.const 1)
            (i32.mul)
            (i32.const 1)
            (i32.mul)
            (i32.add)
            (local.set 16)
            (local.get 1)
            (local.set 17)
            (local.get 16)
            (local.set 18)
            (local.get 2)
            (local.set 19)
            (loop
              (local.get 19)
              (i32.const 0)
              (i32.gt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 18)
                  (local.get 19)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 17)
                  (local.get 19)
                  (i32.const 1)
                  (i32.sub)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (i32.const 0)
                  (local.set 20)
                  (local.get 19)
                  (i32.const 1)
                  (i32.sub)
                  (local.set 19)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (i32.const 0)
            (local.set 21)
            (local.get 14)
            (local.get 2)
            (i64.extend_i32_u)
            (i64.add)
            (local.set 22)
            (i32.const 0)
            (i32.load align=1)
            (i32.const 1)
            (i32.const 3)
            (i32.mul)
            (i32.const 8)
            (i32.mul)
            (i32.const 0)
            (i32.load align=1)
            (i32.add)
            (call 4)
            (i32.const 0)
            (local.set 5)
            (local.set 6)
            (local.get 5)
            (local.get 6)
            (i32.store align=1)
            (local.set 23)
            (i32.const 0)
            (local.set 24)
            (loop
              (local.get 24)
              (i32.const 8)
              (i32.lt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 23)
                  (i32.const 0)
                  (i32.add)
                  (local.get 24)
                  (i32.add)
                  (local.get 12)
                  (i32.const 0)
                  (i32.const 8)
                  (i32.mul)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 24)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 24)
                  (i32.const 1)
                  (i32.add)
                  (local.set 24)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (local.get 23)
            (local.get 13)
            (i32.store offset=8 align=1)
            (local.get 23)
            (local.get 22)
            (i64.store offset=16 align=1)
            (i32.const 0)
            (local.set 25)
            (local.get 23)
            (local.set 26)
            (i32.const 0)
            (local.set 27)
            (loop
              (local.get 27)
              (i32.const 24)
              (i32.lt_u)
              (if
                (then
                  (i32.const 0)
                  (i32.load align=1)
                  (local.get 0)
                  (i32.const 0)
                  (i32.add)
                  (local.get 27)
                  (i32.add)
                  (local.get 26)
                  (i32.const 0)
                  (i32.const 24)
                  (i32.mul)
                  (i32.const 1)
                  (i32.mul)
                  (i32.add)
                  (local.get 27)
                  (i32.add)
                  (i32.load8_u)
                  (i32.store8)
                  (local.get 27)
                  (i32.const 1)
                  (i32.add)
                  (local.set 27)
                  (i32.const 0)
                  (local.set 5)
                  (local.set 6)
                  (local.get 5)
                  (local.get 6)
                  (i32.store align=1)
                  (br 1)
                )
                (else (nop))
              )
            )
            (i32.const 0)
            (local.set 28)
            (i32.const -559_038_737)
          )
          (else
            (local.get 10)
            (i32.const 0)
            (i32.eq)
            (if
              (result i32)
              (then
                (local.get 0)
                (local.set 29)
                (local.get 29)
                (i32.const 0)
                (i32.const 3)
                (i32.mul)
                (i32.const 8)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.add)
                (local.set 30)
                (local.get 29)
                (i32.const 0)
                (i32.const 24)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load offset=8 align=1)
                (local.set 31)
                (local.get 29)
                (i32.const 0)
                (i32.const 24)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i64.load offset=16 align=1)
                (local.set 32)
                (local.get 32)
                (i32.const 64)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i64.const 0)
                (i64.eq)
                (local.get 32)
                (i64.const 0)
                (i64.gt_u)
                (i32.and)
                (if
                  (result i32)
                  (then (i32.const 64))
                  (else
                    (local.get 32)
                    (i32.const 64)
                    (i64.extend_i32_u)
                    (i64.rem_u)
                    (i32.wrap_i64)
                  )
                )
                (local.set 33)
                (local.get 33)
                (i32.const 0)
                (i32.eq)
                (i32.const 0)
                (i32.eq)
                (if
                  (result i32)
                  (then
                    (local.get 32)
                    (local.get 33)
                    (i64.extend_i32_u)
                    (i64.sub)
                    (local.set 34)
                    (local.get 30)
                    (i32.const 0)
                    (i32.const 8)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 35)
                    (local.get 30)
                    (i32.const 0)
                    (i32.const 8)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (i32.load offset=4 align=1)
                    (local.set 36)
                    (i32.const 1)
                    (local.set 37)
                    (i32.const 64)
                    (local.get 35)
                    (local.get 36)
                    (local.get 34)
                    (local.get 31)
                    (local.get 37)
                    (call 9)
                    (local.set 38)
                    (i32.const -559_038_737)
                  )
                  (else (i32.const -559_038_737))
                )
                (local.set 39)
                (local.get 2)
                (i64.extend_i32_u)
                (i32.const 64)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i64.const 0)
                (i64.eq)
                (local.get 2)
                (i64.extend_i32_u)
                (i64.const 0)
                (i64.gt_u)
                (i32.and)
                (if
                  (result i32)
                  (then (i32.const 64))
                  (else
                    (local.get 2)
                    (i64.extend_i32_u)
                    (i32.const 64)
                    (i64.extend_i32_u)
                    (i64.rem_u)
                    (i32.wrap_i64)
                  )
                )
                (local.set 40)
                (local.get 2)
                (local.get 40)
                (i32.sub)
                (i32.const 64)
                (i32.div_u)
                (local.set 41)
                (local.get 41)
                (i32.const 64)
                (i32.mul)
                (local.set 42)
                (local.get 2)
                (local.get 42)
                (i32.sub)
                (local.set 43)
                (local.get 1)
                (local.set 44)
                (local.get 1)
                (local.get 42)
                (i32.const 1)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (local.set 45)
                (local.get 30)
                (i32.const 0)
                (i32.const 8)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load align=1)
                (local.set 46)
                (local.get 30)
                (i32.const 0)
                (i32.const 8)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load offset=4 align=1)
                (local.set 47)
                (local.get 42)
                (i32.const 64)
                (i32.div_u)
                (local.set 48)
                (local.get 42)
                (local.get 46)
                (local.get 47)
                (local.get 32)
                (local.get 44)
                (local.get 48)
                (call 9)
                (local.set 49)
                (local.get 31)
                (local.set 50)
                (local.get 45)
                (local.set 51)
                (local.get 50)
                (local.set 52)
                (local.get 43)
                (local.set 53)
                (loop
                  (local.get 53)
                  (i32.const 0)
                  (i32.gt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 52)
                      (local.get 53)
                      (i32.const 1)
                      (i32.sub)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 51)
                      (local.get 53)
                      (i32.const 1)
                      (i32.sub)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (i32.const 0)
                      (local.set 54)
                      (local.get 53)
                      (i32.const 1)
                      (i32.sub)
                      (local.set 53)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (i32.const 0)
                (local.set 55)
                (i32.const 0)
                (i32.load align=1)
                (i32.const 1)
                (i32.const 3)
                (i32.mul)
                (i32.const 8)
                (i32.mul)
                (i32.const 0)
                (i32.load align=1)
                (i32.add)
                (call 4)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (local.set 56)
                (i32.const 0)
                (local.set 57)
                (loop
                  (local.get 57)
                  (i32.const 8)
                  (i32.lt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 56)
                      (i32.const 0)
                      (i32.add)
                      (local.get 57)
                      (i32.add)
                      (local.get 30)
                      (i32.const 0)
                      (i32.const 8)
                      (i32.mul)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 57)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (local.get 57)
                      (i32.const 1)
                      (i32.add)
                      (local.set 57)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (local.get 56)
                (local.get 31)
                (i32.store offset=8 align=1)
                (local.get 56)
                (local.get 32)
                (local.get 2)
                (i64.extend_i32_u)
                (i64.add)
                (i64.store offset=16 align=1)
                (i32.const 0)
                (local.set 58)
                (local.get 56)
                (local.set 59)
                (i32.const 0)
                (local.set 60)
                (loop
                  (local.get 60)
                  (i32.const 24)
                  (i32.lt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 0)
                      (i32.const 0)
                      (i32.add)
                      (local.get 60)
                      (i32.add)
                      (local.get 59)
                      (i32.const 0)
                      (i32.const 24)
                      (i32.mul)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 60)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (local.get 60)
                      (i32.const 1)
                      (i32.add)
                      (local.set 60)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (i32.const 0)
                (local.set 61)
                (i32.const -559_038_737)
              )
              (else
                (i32.const 64)
                (local.get 10)
                (i32.sub)
                (local.set 62)
                (local.get 1)
                (local.set 63)
                (local.get 1)
                (local.get 62)
                (i32.const 1)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (local.set 64)
                (local.get 0)
                (local.set 65)
                (local.get 65)
                (i32.const 0)
                (i32.const 3)
                (i32.mul)
                (i32.const 8)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.add)
                (local.set 66)
                (local.get 65)
                (i32.const 0)
                (i32.const 24)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load offset=8 align=1)
                (local.set 67)
                (local.get 65)
                (i32.const 0)
                (i32.const 24)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i64.load offset=16 align=1)
                (local.set 68)
                (local.get 68)
                (i32.const 64)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i64.const 0)
                (i64.eq)
                (local.get 68)
                (i64.const 0)
                (i64.gt_u)
                (i32.and)
                (if
                  (result i32)
                  (then (i32.const 64))
                  (else
                    (local.get 68)
                    (i32.const 64)
                    (i64.extend_i32_u)
                    (i64.rem_u)
                    (i32.wrap_i64)
                  )
                )
                (local.set 69)
                (local.get 67)
                (local.get 69)
                (i32.const 1)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (local.set 70)
                (local.get 63)
                (local.set 71)
                (local.get 70)
                (local.set 72)
                (local.get 62)
                (local.set 73)
                (loop
                  (local.get 73)
                  (i32.const 0)
                  (i32.gt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 72)
                      (local.get 73)
                      (i32.const 1)
                      (i32.sub)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 71)
                      (local.get 73)
                      (i32.const 1)
                      (i32.sub)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (i32.const 0)
                      (local.set 74)
                      (local.get 73)
                      (i32.const 1)
                      (i32.sub)
                      (local.set 73)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (i32.const 0)
                (local.set 75)
                (local.get 68)
                (local.get 62)
                (i64.extend_i32_u)
                (i64.add)
                (local.set 76)
                (i32.const 0)
                (i32.load align=1)
                (i32.const 1)
                (i32.const 3)
                (i32.mul)
                (i32.const 8)
                (i32.mul)
                (i32.const 0)
                (i32.load align=1)
                (i32.add)
                (call 4)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (local.set 77)
                (i32.const 0)
                (local.set 78)
                (loop
                  (local.get 78)
                  (i32.const 8)
                  (i32.lt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 77)
                      (i32.const 0)
                      (i32.add)
                      (local.get 78)
                      (i32.add)
                      (local.get 66)
                      (i32.const 0)
                      (i32.const 8)
                      (i32.mul)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 78)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (local.get 78)
                      (i32.const 1)
                      (i32.add)
                      (local.set 78)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (local.get 77)
                (local.get 67)
                (i32.store offset=8 align=1)
                (local.get 77)
                (local.get 76)
                (i64.store offset=16 align=1)
                (i32.const 0)
                (local.set 79)
                (local.get 77)
                (local.set 80)
                (i32.const 0)
                (local.set 81)
                (loop
                  (local.get 81)
                  (i32.const 24)
                  (i32.lt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 0)
                      (i32.const 0)
                      (i32.add)
                      (local.get 81)
                      (i32.add)
                      (local.get 80)
                      (i32.const 0)
                      (i32.const 24)
                      (i32.mul)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 81)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (local.get 81)
                      (i32.const 1)
                      (i32.add)
                      (local.set 81)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (i32.const 0)
                (local.set 82)
                (local.get 0)
                (local.set 83)
                (local.get 83)
                (i32.const 0)
                (i32.const 3)
                (i32.mul)
                (i32.const 8)
                (i32.mul)
                (i32.add)
                (i32.const 0)
                (i32.add)
                (local.set 84)
                (local.get 83)
                (i32.const 0)
                (i32.const 24)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load offset=8 align=1)
                (local.set 85)
                (local.get 83)
                (i32.const 0)
                (i32.const 24)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i64.load offset=16 align=1)
                (local.set 86)
                (local.get 86)
                (i32.const 64)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i64.const 0)
                (i64.eq)
                (local.get 86)
                (i64.const 0)
                (i64.gt_u)
                (i32.and)
                (if
                  (result i32)
                  (then (i32.const 64))
                  (else
                    (local.get 86)
                    (i32.const 64)
                    (i64.extend_i32_u)
                    (i64.rem_u)
                    (i32.wrap_i64)
                  )
                )
                (local.set 87)
                (local.get 87)
                (i32.const 0)
                (i32.eq)
                (i32.const 0)
                (i32.eq)
                (if
                  (result i32)
                  (then
                    (local.get 86)
                    (local.get 87)
                    (i64.extend_i32_u)
                    (i64.sub)
                    (local.set 88)
                    (local.get 84)
                    (i32.const 0)
                    (i32.const 8)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (i32.load align=1)
                    (local.set 89)
                    (local.get 84)
                    (i32.const 0)
                    (i32.const 8)
                    (i32.mul)
                    (i32.const 1)
                    (i32.mul)
                    (i32.add)
                    (i32.load offset=4 align=1)
                    (local.set 90)
                    (i32.const 1)
                    (local.set 91)
                    (i32.const 64)
                    (local.get 89)
                    (local.get 90)
                    (local.get 88)
                    (local.get 85)
                    (local.get 91)
                    (call 9)
                    (local.set 92)
                    (i32.const -559_038_737)
                  )
                  (else (i32.const -559_038_737))
                )
                (local.set 93)
                (local.get 2)
                (local.get 62)
                (i32.sub)
                (i64.extend_i32_u)
                (i32.const 64)
                (i64.extend_i32_u)
                (i64.rem_u)
                (i64.const 0)
                (i64.eq)
                (local.get 2)
                (local.get 62)
                (i32.sub)
                (i64.extend_i32_u)
                (i64.const 0)
                (i64.gt_u)
                (i32.and)
                (if
                  (result i32)
                  (then (i32.const 64))
                  (else
                    (local.get 2)
                    (local.get 62)
                    (i32.sub)
                    (i64.extend_i32_u)
                    (i32.const 64)
                    (i64.extend_i32_u)
                    (i64.rem_u)
                    (i32.wrap_i64)
                  )
                )
                (local.set 94)
                (local.get 2)
                (local.get 62)
                (i32.sub)
                (local.get 94)
                (i32.sub)
                (i32.const 64)
                (i32.div_u)
                (local.set 95)
                (local.get 95)
                (i32.const 64)
                (i32.mul)
                (local.set 96)
                (local.get 2)
                (local.get 62)
                (i32.sub)
                (local.get 96)
                (i32.sub)
                (local.set 97)
                (local.get 64)
                (local.set 98)
                (local.get 64)
                (local.get 96)
                (i32.const 1)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (local.set 99)
                (local.get 84)
                (i32.const 0)
                (i32.const 8)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load align=1)
                (local.set 100)
                (local.get 84)
                (i32.const 0)
                (i32.const 8)
                (i32.mul)
                (i32.const 1)
                (i32.mul)
                (i32.add)
                (i32.load offset=4 align=1)
                (local.set 101)
                (local.get 96)
                (i32.const 64)
                (i32.div_u)
                (local.set 102)
                (local.get 96)
                (local.get 100)
                (local.get 101)
                (local.get 86)
                (local.get 98)
                (local.get 102)
                (call 9)
                (local.set 103)
                (local.get 85)
                (local.set 104)
                (local.get 99)
                (local.set 105)
                (local.get 104)
                (local.set 106)
                (local.get 97)
                (local.set 107)
                (loop
                  (local.get 107)
                  (i32.const 0)
                  (i32.gt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 106)
                      (local.get 107)
                      (i32.const 1)
                      (i32.sub)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 105)
                      (local.get 107)
                      (i32.const 1)
                      (i32.sub)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (i32.const 0)
                      (local.set 108)
                      (local.get 107)
                      (i32.const 1)
                      (i32.sub)
                      (local.set 107)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (i32.const 0)
                (local.set 109)
                (i32.const 0)
                (i32.load align=1)
                (i32.const 1)
                (i32.const 3)
                (i32.mul)
                (i32.const 8)
                (i32.mul)
                (i32.const 0)
                (i32.load align=1)
                (i32.add)
                (call 4)
                (i32.const 0)
                (local.set 5)
                (local.set 6)
                (local.get 5)
                (local.get 6)
                (i32.store align=1)
                (local.set 110)
                (i32.const 0)
                (local.set 111)
                (loop
                  (local.get 111)
                  (i32.const 8)
                  (i32.lt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 110)
                      (i32.const 0)
                      (i32.add)
                      (local.get 111)
                      (i32.add)
                      (local.get 84)
                      (i32.const 0)
                      (i32.const 8)
                      (i32.mul)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 111)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (local.get 111)
                      (i32.const 1)
                      (i32.add)
                      (local.set 111)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (local.get 110)
                (local.get 85)
                (i32.store offset=8 align=1)
                (local.get 110)
                (local.get 86)
                (local.get 2)
                (local.get 62)
                (i32.sub)
                (i64.extend_i32_u)
                (i64.add)
                (i64.store offset=16 align=1)
                (i32.const 0)
                (local.set 112)
                (local.get 110)
                (local.set 113)
                (i32.const 0)
                (local.set 114)
                (loop
                  (local.get 114)
                  (i32.const 24)
                  (i32.lt_u)
                  (if
                    (then
                      (i32.const 0)
                      (i32.load align=1)
                      (local.get 0)
                      (i32.const 0)
                      (i32.add)
                      (local.get 114)
                      (i32.add)
                      (local.get 113)
                      (i32.const 0)
                      (i32.const 24)
                      (i32.mul)
                      (i32.const 1)
                      (i32.mul)
                      (i32.add)
                      (local.get 114)
                      (i32.add)
                      (i32.load8_u)
                      (i32.store8)
                      (local.get 114)
                      (i32.const 1)
                      (i32.add)
                      (local.set 114)
                      (i32.const 0)
                      (local.set 5)
                      (local.set 6)
                      (local.get 5)
                      (local.get 6)
                      (i32.store align=1)
                      (br 1)
                    )
                    (else (nop))
                  )
                )
                (i32.const 0)
                (local.set 115)
                (i32.const -559_038_737)
              )
            )
          )
        )
        (local.set 116)
        (i32.const 0)
      )
    )
    (local.set 117)
    (local.get 117)
    (local.get 7)
    (i32.const 0)
    (local.set 5)
    (local.set 6)
    (local.get 5)
    (local.get 6)
    (i32.store align=1)
  )
  (func $13
    (type 13)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i64 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 6)
    (local.get 0)
    (local.set 7)
    (local.get 7)
    (i32.const 0)
    (i32.const 3)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.add)
    (i32.const 0)
    (i32.add)
    (local.set 8)
    (local.get 7)
    (i32.const 0)
    (i32.const 24)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=8 align=1)
    (local.set 9)
    (local.get 7)
    (i32.const 0)
    (i32.const 24)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i64.load offset=16 align=1)
    (local.set 10)
    (local.get 10)
    (i32.const 64)
    (i64.extend_i32_u)
    (i64.rem_u)
    (i64.const 0)
    (i64.eq)
    (local.get 10)
    (i64.const 0)
    (i64.gt_u)
    (i32.and)
    (if
      (result i32)
      (then (i32.const 64))
      (else
        (local.get 10)
        (i32.const 64)
        (i64.extend_i32_u)
        (i64.rem_u)
        (i32.wrap_i64)
      )
    )
    (local.set 11)
    (local.get 9)
    (local.set 12)
    (i32.const 4)
    (local.set 13)
    (global.get 0)
    (i32.const 339)
    (i32.add)
    (call 7)
    (unreachable)
    (local.get 6)
    (i32.const 0)
    (local.set 4)
    (local.set 5)
    (local.get 4)
    (local.get 5)
    (i32.store align=1)
  )
  (func $14
    (type 14)
    (local i64 i64 i32 i32 i32 i32 i32 i32 i32 i32)
    (i32.const 0)
    (i32.load align=1)
    (local.set 5)
    (local.get 0)
    (local.set 6)
    (local.get 6)
    (i32.const 0)
    (i32.const 24)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=8 align=1)
    (local.set 7)
    (local.get 6)
    (i32.const 0)
    (i32.const 3)
    (i32.mul)
    (i32.const 8)
    (i32.mul)
    (i32.add)
    (i32.const 0)
    (i32.add)
    (local.set 8)
    (local.get 8)
    (i32.const 0)
    (i32.const 8)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load align=1)
    (local.set 9)
    (local.get 8)
    (i32.const 0)
    (i32.const 8)
    (i32.mul)
    (i32.const 1)
    (i32.mul)
    (i32.add)
    (i32.load offset=4 align=1)
    (local.set 10)
    (global.get 0)
    (i32.const 508)
    (i32.add)
    (call 7)
    (unreachable)
    (local.get 5)
    (i32.const 0)
    (local.set 3)
    (local.set 4)
    (local.get 3)
    (local.get 4)
    (i32.store align=1)
  )
  (export "Hacl_Streaming_Blake2s_128_blake2s_128_no_key_create_in" (func 10))
  (export "Hacl_Streaming_Blake2s_128_blake2s_128_no_key_init" (func 11))
  (export "Hacl_Streaming_Blake2s_128_blake2s_128_no_key_update" (func 12))
  (export "Hacl_Streaming_Blake2s_128_blake2s_128_no_key_finish" (func 13))
  (export "Hacl_Streaming_Blake2s_128_blake2s_128_no_key_free" (func 14))
  (export "data_size" (global 1))
  (data $0
    (global.get 0)
    "\48\61\63\6c\2e\53\74\72\65\61\6d\69\6e\67\2e\42"
    "\6c\61\6b\65\32\73\5f\31\32\38\2e\62\6c\61\6b\65"
    "\32\73\5f\31\32\38\5f\6e\6f\5f\6b\65\79\5f\63\72"
    "\65\61\74\65\5f\69\6e\3a\20\63\6f\6d\70\69\6c\61"
    "\74\69\6f\6e\20\65\72\72\6f\72\20\74\75\72\6e\65"
    "\64\20\74\6f\20\72\75\6e\74\69\6d\65\20\66\61\69"
    "\6c\75\72\65\0a\46\61\69\6c\75\72\65\28\22\6d\69"
    "\73\73\69\6e\67\20\74\79\70\65\20\69\6e\20\6c\61"
    "\79\6f\75\74\20\6d\61\70\3a\20\4c\69\62\2e\49\6e"
    "\74\56\65\63\74\6f\72\2e\49\6e\74\72\69\6e\73\69"
    "\63\73\2e\76\65\63\31\32\38\22\29\00\48\61\63\6c"
    "\2e\53\74\72\65\61\6d\69\6e\67\2e\42\6c\61\6b\65"
    "\32\73\5f\31\32\38\2e\62\6c\61\6b\65\32\73\5f\31"
    "\32\38\5f\6e\6f\5f\6b\65\79\5f\69\6e\69\74\3a\20"
    "\63\6f\6d\70\69\6c\61\74\69\6f\6e\20\65\72\72\6f"
    "\72\20\74\75\72\6e\65\64\20\74\6f\20\72\75\6e\74"
    "\69\6d\65\20\66\61\69\6c\75\72\65\0a\46\61\69\6c"
    "\75\72\65\28\22\6d\69\73\73\69\6e\67\20\74\79\70"
    "\65\20\69\6e\20\6c\61\79\6f\75\74\20\6d\61\70\3a"
    "\20\4c\69\62\2e\49\6e\74\56\65\63\74\6f\72\2e\49"
    "\6e\74\72\69\6e\73\69\63\73\2e\76\65\63\31\32\38"
    "\22\29\00\48\61\63\6c\2e\53\74\72\65\61\6d\69\6e"
    "\67\2e\42\6c\61\6b\65\32\73\5f\31\32\38\2e\62\6c"
    "\61\6b\65\32\73\5f\31\32\38\5f\6e\6f\5f\6b\65\79"
    "\5f\66\69\6e\69\73\68\3a\20\63\6f\6d\70\69\6c\61"
    "\74\69\6f\6e\20\65\72\72\6f\72\20\74\75\72\6e\65"
    "\64\20\74\6f\20\72\75\6e\74\69\6d\65\20\66\61\69"
    "\6c\75\72\65\0a\46\61\69\6c\75\72\65\28\22\6d\69"
    "\73\73\69\6e\67\20\74\79\70\65\20\69\6e\20\6c\61"
    "\79\6f\75\74\20\6d\61\70\3a\20\4c\69\62\2e\49\6e"
    "\74\56\65\63\74\6f\72\2e\49\6e\74\72\69\6e\73\69"
    "\63\73\2e\76\65\63\31\32\38\22\29\00\48\61\63\6c"
    "\2e\53\74\72\65\61\6d\69\6e\67\2e\42\6c\61\6b\65"
    "\32\73\5f\31\32\38\2e\62\6c\61\6b\65\32\73\5f\31"
    "\32\38\5f\6e\6f\5f\6b\65\79\5f\66\72\65\65\3a\20"
    "\63\6f\6d\70\69\6c\61\74\69\6f\6e\20\65\72\72\6f"
    "\72\20\74\75\72\6e\65\64\20\74\6f\20\72\75\6e\74"
    "\69\6d\65\20\66\61\69\6c\75\72\65\0a\46\61\69\6c"
    "\75\72\65\28\22\54\4f\44\4f\3a\20\69\6d\70\6c\65"
    "\6d\65\6e\74\20\6d\61\6e\75\61\6c\20\6d\65\6d\6f"
    "\72\79\20\6d\61\6e\61\67\65\6d\65\6e\74\22\29\00"
  )
)
