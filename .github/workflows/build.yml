name: hacl_build

on: [push, pull_request]

jobs:
  # TODO: use composite actions
  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [{cpp: g++-11, c: gcc-11}, {cpp: clang++, c: clang}]
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cpp }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: brew install ninja
    - name: Debug Build w/ tests
      run: ./mach build --tests -v
    - name: Release Build
      run: ./mach build --release -v
    - name: Install
      run: |
        mkdir pkg-release
        ./mach install -p $PWD/pkg-release -c Release
        mkdir pkg-debug
        ./mach install -p $PWD/pkg-debug
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: macos-x64-${{ matrix.compiler.c }}
        path: |
          pkg-debug
          pkg-release
          build/Debug
          build/Release
  build-linux-gcc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [7, 8, 9, 10, 11]
    env:
      CC: gcc-${{ matrix.compiler }}
      CXX: g++-${{ matrix.compiler }}
    steps:
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build gcc-${{ matrix.compiler }} g++-${{ matrix.compiler }}
    - uses: actions/checkout@v2
    - name: Debug Build w/ tests
      run: ./mach build --tests -v
    - name: Release Build
      run: ./mach build --release -v
    - name: Install
      run: |
        mkdir pkg-release
        ./mach install -p $PWD/pkg-release -c Release
        mkdir pkg-debug
        ./mach install -p $PWD/pkg-debug
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux-x64-gcc${{ matrix.compiler }}
        path: |
          pkg-debug
          pkg-release
          build/Debug
          build/Release
  build-linux-clang:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [7, 8, 9, 10]
    env:
      CC: clang-${{ matrix.compiler }}
      CXX: clang++-${{ matrix.compiler }}
    steps:
    - name: Output name
      id: vars
      run: |
        echo ::set-output name=short_sha::${GITHUB_SHA: -8}
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build clang-${{ matrix.compiler }}
    - uses: actions/checkout@v2
    - name: Debug Build w/ tests
      run: ./mach build --tests -v
    - name: Release Build
      run: ./mach build --release -v
    - name: Install
      run: |
        mkdir pkg-release
        ./mach install -p $PWD/pkg-release -c Release
        mkdir pkg-debug
        ./mach install -p $PWD/pkg-debug
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux-x64-clang${{ matrix.compiler }}-${{ steps.vars.outputs.short_sha }}
        path: |
          pkg-debug
          pkg-release
          build/Debug
          build/Release

  test-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [clang7, clang8, clang9, clang10, gcc7, gcc8, gcc9, gcc10, gcc11]
    steps:
    - name: Input name
      id: vars
      run: |
        echo ::set-output name=short_sha::${GITHUB_SHA: -8}
    - name: Setup
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build clang-${{ matrix.compiler }}
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      with:
        name: linux-x64-${{ matrix.compiler }}-${{ steps.vars.outputs.short_sha }}
        path: ~/
    - name: Test
      run: ./mach test
