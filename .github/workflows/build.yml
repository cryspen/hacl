name: hacl_build

on: [push, pull_request]

jobs:
  build-debug:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - if: matrix.os == 'macos-latest'
      name: Setup
      run: brew install ninja
    - if: matrix.os == 'ubuntu-latest'
      name: Setup
      run: sudo apt-get install ninja-build
    - name: Build w/ tests
      run: ./mach build --tests -v
    - name: Install
      run: |
        mkdir pkg
        ./mach install -p $PWD/pkg
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-debug
        path: |
          build/Debug
          pkg
  # TODO: use composite actions
  build-release:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          # - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - if: matrix.os == 'macos-latest'
      name: Setup
      run: brew install ninja
    - if: matrix.os == 'ubuntu-latest'
      name: Setup
      run: sudo apt-get install ninja-build
    - name: Build
      run: ./mach build --release -v
    - name: Install
      run: |
        mkdir pkg
        ./mach install -p $PWD/pkg -c Release
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-release
        path: pkg
  # GCC builds on macOS
  # TODO: use composite actions
  build-debug-gcc:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [[gcc-11, g++-11], [gcc-10, g++-10], [gcc-9, g++-9]]
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: brew install ninja
    - name: Debug Build
      run: CC=${{ matrix.compiler[0] }} CXX=${{ matrix.compiler[1] }} ./mach build -v
    - name: Release Build
      run: CC=${{ matrix.compiler[0] }} CXX=${{ matrix.compiler[1] }} ./mach build --release -v
  # TODO: use composite actions
  build-release-gcc:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [[gcc-11, g++-11], [gcc-10, g++-10], [gcc-9, g++-9]]
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: brew install ninja
    - name: Debug Build
      run: CC=${{ matrix.compiler[0] }} CXX=${{ matrix.compiler[1] }} ./mach build -v
