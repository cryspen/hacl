name: hacl_build

on: [push, pull_request]

jobs:
  # TODO: use composite actions
  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [{ cpp: g++-11, c: gcc-11 }, { cpp: clang++, c: clang }]
    env:
      CC: ${{ matrix.compiler.c }}
      CXX: ${{ matrix.compiler.cpp }}
    steps:
      - uses: actions/checkout@v2
      - name: Output name
        id: vars
        run: |
          echo ::set-output name=short_sha::${GITHUB_SHA: -8}
      - name: Setup
        run: brew install ninja
      - name: Debug Build w/ tests
        run: ./mach build --tests -v
      - name: Release Build
        run: ./mach build --release -v
      - name: Install
        run: |
          mkdir pkg-release
          ./mach install -p $PWD/pkg-release -c Release
          mkdir pkg-debug
          ./mach install -p $PWD/pkg-debug
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-x64-${{ matrix.compiler.c }}-${{ steps.vars.outputs.short_sha }}
          path: |
            pkg-debug
            pkg-release
            build/Debug
            build/Release
  build-linux-gcc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [7, 8, 9, 10, 11]
    env:
      CC: gcc-${{ matrix.compiler }}
      CXX: g++-${{ matrix.compiler }}
    steps:
      - name: Output name
        id: vars
        run: |
          echo ::set-output name=short_sha::${GITHUB_SHA: -8}
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build gcc-${{ matrix.compiler }} g++-${{ matrix.compiler }}
      - uses: actions/checkout@v2
      - name: Debug Build w/ tests
        run: ./mach build --tests -v
      - name: Release Build
        run: ./mach build --release -v
      - name: Install
        run: |
          mkdir pkg-release
          ./mach install -p $PWD/pkg-release -c Release
          mkdir pkg-debug
          ./mach install -p $PWD/pkg-debug
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64-gcc${{ matrix.compiler }}-${{ steps.vars.outputs.short_sha }}
          path: |
            pkg-debug
            pkg-release
            build/Debug
            build/Release
  build-linux-clang:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [7, 8, 9, 10]
    env:
      CC: clang-${{ matrix.compiler }}
      CXX: clang++-${{ matrix.compiler }}
    steps:
      - name: Output name
        id: vars
        run: |
          echo ::set-output name=short_sha::${GITHUB_SHA: -8}
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build clang-${{ matrix.compiler }}
      - uses: actions/checkout@v2
      - name: Debug Build w/ tests
        run: ./mach build --tests -v
      - name: Release Build
        run: ./mach build --release -v
      - name: Install
        run: |
          mkdir pkg-release
          ./mach install -p $PWD/pkg-release -c Release
          mkdir pkg-debug
          ./mach install -p $PWD/pkg-debug
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux-x64-clang${{ matrix.compiler }}-${{ steps.vars.outputs.short_sha }}
          path: |
            pkg-debug
            pkg-release
            build/Debug
            build/Release

  test-linux:
    runs-on: ubuntu-latest
    needs: [build-linux-clang, build-linux-gcc]
    strategy:
      matrix:
        compiler:
          [
            [clang, 7],
            [clang, 8],
            [clang, 9],
            [clang, 10],
            [gcc, 7],
            [gcc, 8],
            [gcc, 9],
            [gcc, 10],
            [gcc, 11],
          ]
    steps:
      - name: Input name
        id: vars
        run: |
          echo ::set-output name=short_sha::${GITHUB_SHA: -8}
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build clang-${{ matrix.compiler[1] }}
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: linux-x64-${{ matrix.compiler[0] }}${{ matrix.compiler[1] }}-${{ steps.vars.outputs.short_sha }}
          path: ~/
      - name: Test
        run: ./mach test
