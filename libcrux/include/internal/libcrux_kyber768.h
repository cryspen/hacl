/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>
  KaRaMeL invocation: ../../../eurydice/eurydice --config ../../kyber-c.yaml ../libcrux_kyber.llbc
  F* version: b5cb71b8
  KaRaMeL version: 1282f04f
 */

#ifndef __internal_libcrux_kyber768_H
#define __internal_libcrux_kyber768_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "internal/libcrux_kyber_common.h"
#include "../libcrux_kyber768.h"
#include "eurydice_glue.h"

typedef struct core_option_Option__Eurydice_slice_uint8_t_s
{
  core_option_Option__size_t_tags tag;
  Eurydice_slice f0;
}
core_option_Option__Eurydice_slice_uint8_t;

void
libcrux_kyber_ind_cpa_into_padded_array___34size_t(Eurydice_slice slice, uint8_t ret[34U]);

void
libcrux_kyber_ind_cpa_into_padded_array___33size_t(Eurydice_slice slice, uint8_t ret[33U]);

void libcrux_kyber_hash_functions_PRF___128size_t(Eurydice_slice input, uint8_t ret[128U]);

void
libcrux_kyber_sampling_sample_from_binomial_distribution___2size_t(
  Eurydice_slice randomness,
  int32_t ret[256U]
);

typedef struct K___Eurydice_slice_uint8_t_Eurydice_slice_uint8_t_s
{
  Eurydice_slice fst;
  Eurydice_slice snd;
}
K___Eurydice_slice_uint8_t_Eurydice_slice_uint8_t;

#define core_result_Ok 0
#define core_result_Err 1

typedef uint8_t core_result_Result__uint8_t_32size_t__core_array_TryFromSliceError_tags;

typedef struct core_result_Result__uint8_t_32size_t__core_array_TryFromSliceError_s
{
  core_result_Result__uint8_t_32size_t__core_array_TryFromSliceError_tags tag;
  union {
    uint8_t case_Ok[32U];
    core_array_TryFromSliceError case_Err;
  }
  val;
}
core_result_Result__uint8_t_32size_t__core_array_TryFromSliceError;

void
core_result__core__result__Result_T__E___unwrap__uint8_t_32size_t__core_array_TryFromSliceError(
  core_result_Result__uint8_t_32size_t__core_array_TryFromSliceError self,
  uint8_t ret[32U]
);

void
libcrux_kyber_ind_cpa_into_padded_array___64size_t(Eurydice_slice slice, uint8_t ret[64U]);

void
libcrux_kyber_serialize_compress_then_serialize_ring_element_u___10size_t_320size_t(
  int32_t re[256U],
  uint8_t ret[320U]
);

void
libcrux_kyber_serialize_compress_then_serialize_ring_element_v___4size_t_128size_t(
  int32_t re[256U],
  uint8_t ret[128U]
);

void
libcrux_kyber_serialize_deserialize_then_decompress_ring_element_u___10size_t(
  Eurydice_slice serialized,
  int32_t ret[256U]
);

void libcrux_kyber_ntt_ntt_vector_u___10size_t(int32_t re[256U], int32_t ret[256U]);

void
libcrux_kyber_serialize_deserialize_then_decompress_ring_element_v___4size_t(
  Eurydice_slice serialized,
  int32_t ret[256U]
);

void libcrux_kyber_hash_functions_PRF___32size_t(Eurydice_slice input, uint8_t ret[32U]);

#if defined(__cplusplus)
}
#endif

#define __internal_libcrux_kyber768_H_DEFINED
#endif
